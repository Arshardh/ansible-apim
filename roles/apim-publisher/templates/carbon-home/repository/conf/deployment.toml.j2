[server]
hostname = "{{ hostname }}"
node_ip = "0.0.0.0"
server_role = "api-publisher"
offset = "{{ ports_offset }}"

[user_store]
type = "database_unique_id"

[transport.https.properties]
proxyPort = 443

[super_admin]
username = "{{ admin_username }}"
password = "{{ admin_password }}"
create_admin_account = true

[database.apim_db]
type = "{{ wso2am_db_type }}"
url = "{{ wso2am_db_url }}"
username = "{{ wso2am_db_username }}"
password = "{{ wso2am_db_password }}"

[database.shared_db]
type = "{{ wso2shared_db_type }}"
url = "{{ wso2shared_db_url }}"
username = "{{ wso2shared_db_username }}"
password = "{{ wso2shared_db_password }}"

[keystore.tls]
file_name =  "{{ key_store_location }}"
type =  "JKS"
password =  "{{ key_store_password }}"
alias =  "{{ key_store_key_alias }}"
key_password =  "{{ key_store_key_password }}"

[truststore]
file_name = "{{ trust_store_location }}"
type = "JKS"
password = "{{ trust_store_password }}"

{% for environment in gateway_environments %}

[[apim.gateway.environment]]
name = "{{ environment.name }}"
type = "{{ environment.type }}"
display_in_api_console = true
description = "{{ environment.description }}"
service_url = "{{ environment.service_url }}"
username= "${admin.username}"
password= "${admin.password}"
http_endpoint = "{{ environment.http_endpoint }}"
https_endpoint = "{{ environment.https_endpoint }}"
{% endfor %}

# key manager implementation
[apim.key_manager]
service_url = "{{ key_manager_server_url }}"
username= "$ref{super_admin.username}"
password= "$ref{super_admin.password}"

[apim.analytics]
enable = "{{ analytics_enabled }}"
username = "{{ analytics_username }}"
password = "{{ analytics_password }}"
store_api_url = "{{ stream_processor_rest_api_url }}"

# Traffic Manager configurations
[apim.throttling]
username= "$ref{super_admin.username}"
password= "$ref{super_admin.password}"
service_url = "{{ throttle_config_policy_deployer_url }}"
throttle_decision_endpoints = [{% for endpoint in throttle_decision_endpoints %}"{{ endpoint }}"{%- if not loop.last -%},{% endif %}{% endfor %}]

{% for url_group in throttling_url_group %}
[[apim.throttling.url_group]]
traffic_manager_urls=[{% for url in url_group['traffic_manager_urls'] %}"{{ url }}"{%- if not loop.last -%},{% endif %}{% endfor %}]
traffic_manager_auth_urls=[{% for url in url_group['traffic_manager_auth_urls'] %}"{{ url }}"{%- if not loop.last -%},{% endif %}{% endfor %}]
{% endfor %}

[apim.cache.scopes]
enable = true

[apim.cache.publisher_roles] #check the usage and move to dev role
enable = true

[apim.devportal]
url = "{{ api_devportal_url }}"

[apim.workflow]
enable = {{ workflow_enable }}
service_url = "{{ workflow_service_url }}"
username = "$ref{super_admin.username}"
password = "$ref{super_admin.password}"
callback_endpoint = "{{ workflow_callback_endpoint }}"
token_endpoint = "{{ workflow_token_endpoint }}"
client_registration_endpoint = "{{ workflow_client_registration_endpoint }}"
client_registration_username = "$ref{super_admin.username}"
client_registration_password = "$ref{super_admin.password}"

[apim.devportal.recommendations]
recommendations_api = "{{ recommendations_api }}"
consumer_key = "{{ recommendations_consumer_key }}"
consumer_secret = "{{ recommendations_consumer_secret }}"
wait_duration = 2
apply_for_all_tenants = false

[[event_handler]]
name="userPostSelfRegistration"
subscriptions=["POST_ADD_USER"]

[database.local]
url = "jdbc:h2:./repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE"

[apim.sync_runtime_artifacts.publisher]
artifact_saver = "DBSaver"
publish_directly_to_gateway = "false"

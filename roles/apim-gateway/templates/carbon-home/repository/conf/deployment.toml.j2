[server]
hostname = "{{ hostname }}"
node_ip = "127.0.0.1"
server_role = "gateway-worker"
offset = "{{ ports_offset }}"

[user_store]
type = "database_unique_id"

[super_admin]
username = "{{ admin_username }}"
password = "{{ admin_password }}"
create_admin_account = true

[database.apim_db]
type = "{{ wso2am_db_type }}"
url = "{{ wso2am_db_url }}"
username = "{{ wso2am_db_username }}"
password = "{{ wso2am_db_password }}"
driver = "{{ wso2am_db_driver }}"

[database.shared_db]
type = "{{ wso2shared_db_type }}"
url = "{{ wso2shared_db_url }}"
username = "{{ wso2shared_db_username }}"
password = "{{ wso2shared_db_password }}"
driver = "{{ wso2shared_db_driver }}"

[keystore.tls]
file_name =  "{{ key_store_location }}"
type =  "JKS"
password =  "{{ key_store_password }}"
alias =  "{{ key_store_key_alias }}"
key_password =  "{{ key_store_key_password }}"

[truststore]
file_name = "{{ trust_store_location }}"
type = "JKS"
password = "{{ trust_store_password }}"

# key manager implementation
[apim.key_manager]
service_url = "{{ key_manager_server_url }}"
username= "$ref{super_admin.username}"
password= "$ref{super_admin.password}"

# JWT Generation
[apim.jwt]
enable = true
enable_user_claims = true

# Traffic Manager configurations
[apim.throttling]
username= "$ref{super_admin.username}"
password= "$ref{super_admin.password}"
service_url = "{{ throttle_config_policy_deployer_url }}"
throttle_decision_endpoints = [{% for endpoint in throttle_decision_endpoints %}"{{ endpoint }}"{%- if not loop.last -%},{% endif %}{% endfor %}]
enable_unlimited_tier = true
enable_header_based_throttling = true
enable_jwt_claim_based_throttling = true
enable_query_param_based_throttling = true


{% for url_group in throttling_url_group %}
[[apim.throttling.url_group]]
traffic_manager_urls=[{% for url in url_group['traffic_manager_urls'] %}"{{ url }}"{%- if not loop.last -%},{% endif %}{% endfor %}]
traffic_manager_auth_urls=[{% for url in url_group['traffic_manager_auth_urls'] %}"{{ url }}"{%- if not loop.last -%},{% endif %}{% endfor %}]

{% endfor %}

[apim.cache.gateway_token]
enable = true
expiry_time = 15

[apim.cache.resource]
enable = true

[apim.cache.jwt_claim]
enable = true
expiry_time = 900

[apim.oauth_config]
remove_outbound_auth_header = true
auth_header = "Authorization"

[apim.cors]
allow_origins = "*"
allow_methods = ["GET","PUT","POST","DELETE","PATCH","OPTIONS"]
allow_headers = ["authorization","Access-Control-Allow-Origin","Content-Type","SOAPAction","apikey", "testKey"]
allow_credentials = false

